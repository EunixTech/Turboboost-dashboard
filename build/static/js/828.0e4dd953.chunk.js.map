{"version":3,"file":"static/js/828.0e4dd953.chunk.js","mappings":"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","sources":["components/SideBanner.jsx","components/button/GoogleLogin.jsx","views/SignUpPage.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function SideBanner() {\n\n    return (\n        <div className=\"w-[50%] h-[100vh] relative\">\n\n            <img\n                src=\"/graphic/login/bg.png\"\n                className=\"w-[100%] h-[100vh] object-cover absolute z-0\"\n                alt=\"svgIcon\"\n            />\n\n            <div className=\"w-[100%] h-[100vh] flex items-center justify-center absolute z-10\">\n                <img\n                    src=\"/graphic/login/ellipse.png\"\n                    className=\"w-[100%] h-[100vh] object-cover\"\n                    alt=\"svgIcon\"\n                />\n            </div>\n\n            <div className=\"w-[100%] h-[100vh]  flex items-end justify-end opacity-20 absolute z-20\">\n                <img\n                    src=\"/graphic/login/Vector.png\"\n                    className=\"w-[95%]\"\n                    alt=\"banner image\"\n                />\n            </div>\n\n            <div className=\"overflow-hidden w-[100%] h-[100vh] flex items-center flex-col justify-center absolute z-30\">\n                <h1 className=\"inter text-white text-[30px] text-center px-[100px] leading-[38px] font-medium\">\n                    Increasing your website speed has dwnever been easier.\n                </h1>\n\n                <div className=\"w-[600px] mt-[10px] flex items-center justify-center\">\n                    {[\n                        \"7-day free trial\",\n                        \"One-click setup\",\n                        \"No fixed contracts\",\n                    ].map((item, index) => (\n                        <div\n                            key={index}\n                            className=\"mr-[17px] h-[30px] flex items-center\"\n                        >\n                            <img\n                                src=\"/graphic/login/tick.png\"\n                                className=\"w-[10px]  h-[10px] object-contain   mr-[8px]\"\n                                alt=\"svgIcon\"\n                            />\n                            <p className=\"text-[13px] inter font-medium text-white\">\n                                {item}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"relative laptop:w-[370px] scale-110 desktop:w-[65%] mt-[40px] h-[300px]\">\n                    <img src=\"/graphic/login/g1.png\" alt=\"svgIcon\" />\n                    <img\n                        src=\"/graphic/login/g2.png\"\n                        className=\"w-[350px] translate-x-[-70px] translate-y-[120px] absolute bottom-0 left-0\"\n                        alt=\"svgIcon\"\n                    />\n                    <img\n                        src=\"/graphic/login/g3.png\"\n                        className=\"w-[250px]  absolute top-[100px] right-0 translate-x-[50px] \"\n                        alt=\"svgIcon\"\n                    />\n                </div>\n                \n            </div>\n\n        </div>\n\n    )\n\n}\n","import React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport { loginWithGoogle } from '../../slice/userLoginWithGoogleSlice'\n\nexport default function GoogleLoginButton() {\n  const dispatch = useDispatch();\n\n  const renderButton = ({ onClick }) => {\n    return (\n      <button style={{ display: 'none' }} onClick={onClick}>\n        <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          {/* Your SVG icon code here */}\n        </svg>\n        Sign in with Google\n      </button>\n    );\n  };\n\n  const loginWithGoogle = useGoogleLogin({\n    onSuccess: async (response) => {\n      // Prepare the data to be sent to your API\n      const data = {\n        name: response.given_name,\n        email_address: response.email,\n        google_id: String(response.sub.toLowerCase()),\n        google_token: response.access_token,\n        device_token: 'token',\n        device_type: 1,\n      };\n\n      // Dispatch the Redux action to make the API request\n      dispatch(loginWithGoogle(data));\n    },\n  });\n\n  return (\n    <>\n      <GoogleLogin onSuccess={(credentialResponse) => {}} render={renderButton} onError={() => {}} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useWidth from \"../hooks/useWidth\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport GoogleLoginButton from \"../components/button/GoogleLogin\";\nimport SideBanner from \"../components/SideBanner\";\nimport FormikInput from \"../components/forms/FormikInput\";\nimport UserTabSettings from \"../components/SettingsComponent/userTabSetting\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { storeUserData } from \"../slice/userSlice\";\nimport appURLs from \"../appURL\";\n\nconst validationSchema = Yup.object().shape({\n  first_name: Yup.string().required(\"First Name is required\"),\n  last_name: Yup.string().required(\"Last Name is required\"),\n  email_address: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Email is required\"),\n  bussiness_type: Yup.string().required(\"Business Type is required\"),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n      \"Password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character\"\n    )\n    .required(\"Password is required\"),\n});\n\nconst SignUpPage = () => {\n  const screenWidth = useWidth();\n  const router = useNavigate();\n  const [registrationData, setRegistrationData] = useState(null);\n  const dispatch =useDispatch()\n  const count = useSelector((state) => state)\n\n  const appURL = appURLs();\n\n\n  const handleCreateAccount = async (values, { setSubmitting }) => {\n    debugger\n    try {\n      // Make the API request using Axios\n      const response = await axios.post(\n        `${appURL}/user/register-account`,\n        {\n          first_name: values.first_name,\n          last_name: values.last_name,\n          email_address: values.email_address,\n          country: values.country,\n          bussiness_type: values.bussiness_type,\n          password: values.password,\n        }\n      );\n      if (response.status === 201) {\n        // Set the registration data to state\n        setRegistrationData(response.data);\n        dispatch(storeUserData(response.data.data))\n\n// \n        // Redirect to SignIn or any other logic\n        router(\"/auth/signIn\");\n      } else {\n        toast.error(\"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"API call error:\", error);\n      toast.error(\"Registration failed. Please try again.\");\n    } finally {\n      setSubmitting(false); // Ensure to set submitting to false, regardless of success or failure\n    }\n  };\n  return (\n    <div className=\"w-[100%] h-[100vh] flex items-center justify-center\">\n      <div className=\"laptop:w-[50%] mobile:w-[100%] mobile:overflow-y-auto px-[100px] h-[100vh] px-[7%] flex items-center laptop:justify-center\">\n        <div className=\"w-[100%]\">\n          <Formik\n            initialValues={{\n              first_name: \"\",\n              last_name: \"\",\n              email_address: \"\",\n              country: \"\",\n              bussiness_type: \"\",\n              password: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleCreateAccount}\n            \n          >\n              {({ values, handleChange, isSubmitting }) => (\n              <Form>\n                <img src=\"/logo-b.png\" className=\"w-[150px]\" alt=\"logoImage\" />\n                <h1 className=\"text-[34px] mt-[10px] font-bold\">\n                  {\" \"}\n                  Create an account{\" \"}\n                </h1>\n                <p className=\"text-[#969AA5] inter text-[14px] mb-[10px]\">\n                  {\" \"}\n                  Start your 7-day free trial, no credit card required.{\" \"}\n                </p>\n\n                <div className=\"w-[100%] mt-[20px] mb-[13px]\">\n                  <div className=\"grid grid-cols-1 laptop:grid-cols-2 gap-x-4\">\n                    <div>\n                      <FormikInput\n                        inputLabel=\"First Name\"\n                        inputName=\"first_name\"\n                        inputType=\"text\"\n                        value={values.first_name}\n                      />\n                    </div>\n                    <div>\n                      <FormikInput\n                        inputLabel=\"Last Name\"\n                        inputName=\"last_name\"\n                        inputType=\"text\"\n                        value={values.last_name}\n\n                      />\n                    </div>\n                  </div>\n\n                  <FormikInput\n                    inputLabel=\"Business Type\"\n                    inputName=\"bussiness_type\"\n                    inputType=\"text\"\n                    value={values.bussiness_type}\n\n                  />\n\n                  <FormikInput\n                    inputLabel=\"Email\"\n                    inputName=\"email_address\"\n                    inputType=\"email\"\n                    value={values.email_address}\n\n                  />\n                  <FormikInput\n                    inputLabel=\"Country\"\n                    inputName=\"country\"\n                    inputType=\"text\"\n                    value={values.country}\n\n                  />\n                  <FormikInput\n                    inputLabel=\"Password\"\n                    inputName=\"password\"\n                    inputType=\"password\"\n                    value={values.password}\n\n                  />\n                </div>\n\n                <div className=\"flex\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"mr-[5px]\"\n                    name=\"termandcondition\"\n                  />\n                  <p className=\"text-[13px] font-medium translate-y-[1px] text-[#969AA5]\">\n                    {\" \"}\n                    I agree to the TurboBoost\n                    <span className=\"text-[#18113C] cursor-pointer\">\n                      {\" \"}\n                      Terms of Use{\" \"}\n                    </span>{\" \"}\n                    and\n                    <span className=\"text-[#18113C] cursor-pointer\">\n                      {\" \"}\n                      Privacy Policy{\" \"}\n                    </span>\n                  </p>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"h-[38px] text-[#000] w-[100%]  font-medium cursor-pointer font-medium flex items-center justify-center px-[20px] mt-[15px] inter text-[12px] bg-[#38F8AC] rounded-sm mb-[20px]\"\n                  disabled={isSubmitting}\n                >\n                  <span className=\"translate-y-[1.5px]\">Create Account</span>\n                </button>\n                {registrationData && (\n                  <UserTabSettings registrationData={registrationData} />\n                )}\n\n              </Form>\n            )}\n          </Formik>\n\n          <GoogleLoginButton />\n          <p className=\"text-center text-[#b2b3b6] text-[13px] font-medium mt-[10px]\">\n            {\" \"}\n            Already have an account?\n            <span\n              onClick={() => router(\"/auth/signIn\")}\n              className=\"text-[#06F] font-bold cursor-pointer\"\n            >\n              {\" \"}\n              Login{\" \"}\n            </span>\n          </p>\n        </div>\n      </div>\n\n      {screenWidth > 1000 && <SideBanner />}\n\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["SideBanner","_jsxs","className","children","_jsx","src","alt","map","item","index","GoogleLoginButton","dispatch","useDispatch","loginWithGoogle","useGoogleLogin","onSuccess","async","data","name","response","given_name","email_address","email","google_id","String","sub","toLowerCase","google_token","access_token","device_token","device_type","_Fragment","GoogleLogin","credentialResponse","render","_ref","onClick","style","display","width","height","viewBox","fill","xmlns","onError","validationSchema","Yup","shape","first_name","required","last_name","bussiness_type","password","matches","SignUpPage","screenWidth","useWidth","router","useNavigate","registrationData","setRegistrationData","useState","appURL","useSelector","state","appURLs","Formik","initialValues","country","onSubmit","values","setSubmitting","axios","post","concat","status","storeUserData","toast","error","console","_ref2","handleChange","isSubmitting","Form","FormikInput","inputLabel","inputName","inputType","value","type","disabled","UserTabSettings"],"sourceRoot":""}